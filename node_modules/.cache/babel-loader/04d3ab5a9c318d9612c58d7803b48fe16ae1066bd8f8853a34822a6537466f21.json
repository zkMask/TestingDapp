{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaishnavi Singh\\\\OneDrive\\\\Desktop\\\\New folder\\\\Transfer\\\\dexFinal\\\\dexFinal\\\\dex\\\\src\\\\components\\\\Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\nimport { ArrowDownOutlined, DownOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport tokenList from \"../tokenList.json\";\nimport axios from \"axios\";\nimport { useSendTransaction, useWaitForTransaction } from \"wagmi\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Swap(props) {\n  _s();\n  const {\n    address,\n    isConnected\n  } = props;\n  const [messageApi, contextHolder] = message.useMessage();\n  const [tokenOneAmount, setTokenOneAmount] = useState(null);\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(null);\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [changeToken, setChangeToken] = useState(1);\n  const [prices, setPrices] = useState(null);\n  const [addressTo, setAddressTo] = useState(null);\n  const [value, setValue] = useState(null);\n  const [txDetails, setTxDetails] = useState({\n    to: null,\n    data: null,\n    value: null\n  });\n  const {\n    data,\n    sendTransaction\n  } = useSendTransaction({\n    request: {\n      from: address,\n      to: String(txDetails.to),\n      data: String(txDetails.data),\n      value: String(txDetails.value)\n    }\n  });\n  const {\n    isLoading,\n    isSuccess\n  } = useWaitForTransaction({\n    hash: data === null || data === void 0 ? void 0 : data.hash\n  });\n\n  // function handleSlippageChange(e) {\n  //   setSlippage(e.target.value);\n  // }\n\n  function changeAmount2(e) {\n    setValue(e.target.value);\n  }\n  function switchTokens() {\n    setPrices(null);\n    const one = tokenOne;\n    const two = tokenTwo;\n    setTokenOne(two);\n    setTokenTwo(one);\n    // fetchPrices(two.address, one.address);\n  }\n\n  function openModal(asset) {\n    setChangeToken(asset);\n    setIsOpen(true);\n  }\n  function modifyToken(i) {\n    setPrices(null);\n    if (changeToken === 1) {\n      setTokenOne(tokenList[i]);\n    } else {\n      setTokenTwo(tokenList[i]);\n    }\n    setIsOpen(false);\n  }\n  useEffect(() => {\n    if (txDetails.to && isConnected) {\n      sendTransaction();\n    }\n  }, [txDetails]);\n  useEffect(() => {\n    messageApi.destroy();\n    if (isLoading) {\n      messageApi.open({\n        type: 'loading',\n        content: 'Transaction is Pending...',\n        duration: 0\n      });\n    }\n  }, [isLoading]);\n  useEffect(() => {\n    messageApi.destroy();\n    if (isSuccess) {\n      messageApi.open({\n        type: 'success',\n        content: 'Transaction Successful',\n        duration: 1.5\n      });\n    } else if (txDetails.to) {\n      messageApi.open({\n        type: 'error',\n        content: 'Transaction Failed',\n        duration: 1.50\n      });\n    }\n  }, [isSuccess]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [contextHolder, /*#__PURE__*/_jsxDEV(Modal, {\n      open: isOpen,\n      footer: null,\n      onCancel: () => setIsOpen(false),\n      title: \"Select a token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tradeBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tradeBoxHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          trigger: \"click\",\n          placement: \"bottomRight\",\n          children: /*#__PURE__*/_jsxDEV(SettingOutlined, {\n            className: \"cog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Address\",\n          value: tokenOneAmount,\n          onChange: setAddressTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Amount\",\n          value: value,\n          onChange: changeAmount2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"switchButton\",\n          children: /*#__PURE__*/_jsxDEV(ArrowDownOutlined, {\n            className: \"switchArrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assetOne\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assetTwo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swapButton\",\n        disabled: !tokenOneAmount && !isConnected,\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Swap, \"txVM1ihbcMPOk/98LBvR/U1G1yo=\", false, function () {\n  return [message.useMessage, useSendTransaction, useWaitForTransaction];\n});\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","useEffect","Input","Popover","Radio","Modal","message","ArrowDownOutlined","DownOutlined","SettingOutlined","tokenList","axios","useSendTransaction","useWaitForTransaction","Swap","props","address","isConnected","messageApi","contextHolder","useMessage","tokenOneAmount","setTokenOneAmount","tokenTwoAmount","setTokenTwoAmount","tokenOne","setTokenOne","tokenTwo","setTokenTwo","isOpen","setIsOpen","changeToken","setChangeToken","prices","setPrices","addressTo","setAddressTo","value","setValue","txDetails","setTxDetails","to","data","sendTransaction","request","from","String","isLoading","isSuccess","hash","changeAmount2","e","target","switchTokens","one","two","openModal","asset","modifyToken","i","destroy","open","type","content","duration"],"sources":["C:/Users/Vaishnavi Singh/OneDrive/Desktop/New folder/Transfer/dexFinal/dexFinal/dex/src/components/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\r\nimport {\r\n  ArrowDownOutlined,\r\n  DownOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport tokenList from \"../tokenList.json\";\r\nimport axios from \"axios\";\r\nimport { useSendTransaction, useWaitForTransaction } from \"wagmi\";\r\n\r\nfunction Swap(props) {\r\n  const { address, isConnected } = props;\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [tokenOneAmount, setTokenOneAmount] = useState(null);\r\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(null);\r\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\r\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [changeToken, setChangeToken] = useState(1);\r\n  const [prices, setPrices] = useState(null);\r\n  const [addressTo, setAddressTo] = useState(null);\r\n  const [value, setValue] = useState(null);\r\n\r\n  const [txDetails, setTxDetails] = useState({\r\n    to:null,\r\n    data: null,\r\n    value: null,\r\n  }); \r\n\r\n  const {data, sendTransaction} = useSendTransaction({\r\n    request: {\r\n      from: address,\r\n      to: String(txDetails.to),\r\n      data: String(txDetails.data),\r\n      value: String(txDetails.value),\r\n    }\r\n  })\r\n\r\n  const { isLoading, isSuccess } = useWaitForTransaction({\r\n    hash: data?.hash,\r\n  })\r\n\r\n  // function handleSlippageChange(e) {\r\n  //   setSlippage(e.target.value);\r\n  // }\r\n\r\n  function changeAmount2(e) {\r\n    setValue(e.target.value);\r\n  \r\n  }\r\n\r\n  function switchTokens() {\r\n    setPrices(null);\r\n    const one = tokenOne;\r\n    const two = tokenTwo;\r\n    setTokenOne(two);\r\n    setTokenTwo(one);\r\n    // fetchPrices(two.address, one.address);\r\n  }\r\n\r\n  function openModal(asset) {\r\n    setChangeToken(asset);\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function modifyToken(i){\r\n    setPrices(null);\r\n    \r\n    if (changeToken === 1) {\r\n      setTokenOne(tokenList[i]);\r\n    } else {\r\n      setTokenTwo(tokenList[i]);\r\n      \r\n    }\r\n    setIsOpen(false);\r\n  }\r\n\r\n \r\n\r\n \r\n  useEffect(()=>{\r\n\r\n      if(txDetails.to && isConnected){\r\n        sendTransaction();\r\n      }\r\n  }, [txDetails])\r\n\r\n  useEffect(()=>{\r\n\r\n    messageApi.destroy();\r\n\r\n    if(isLoading){\r\n      messageApi.open({\r\n        type: 'loading',\r\n        content: 'Transaction is Pending...',\r\n        duration: 0,\r\n      })\r\n    }    \r\n\r\n  },[isLoading])\r\n\r\n  useEffect(()=>{\r\n    messageApi.destroy();\r\n    if(isSuccess){\r\n      messageApi.open({\r\n        type: 'success',\r\n        content: 'Transaction Successful',\r\n        duration: 1.5,\r\n      })\r\n    }else if(txDetails.to){\r\n      messageApi.open({\r\n        type: 'error',\r\n        content: 'Transaction Failed',\r\n        duration: 1.50,\r\n      })\r\n    }\r\n\r\n  },[isSuccess])\r\n\r\n\r\n \r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        open={isOpen}\r\n        footer={null}\r\n        onCancel={() => setIsOpen(false)}\r\n        title=\"Select a token\"\r\n      >\r\n      \r\n      </Modal>\r\n      <div className=\"tradeBox\">\r\n        <div className=\"tradeBoxHeader\">\r\n          <h4>Transfer</h4>\r\n          <Popover\r\n            trigger=\"click\"\r\n            placement=\"bottomRight\"\r\n          >\r\n            <SettingOutlined className=\"cog\" />\r\n          </Popover>\r\n        </div>\r\n        <div className=\"inputs\">\r\n          <Input\r\n            placeholder=\"Enter Address\"\r\n            value={tokenOneAmount}\r\n            onChange= {setAddressTo}\r\n          />\r\n          <Input placeholder=\"Enter Amount\" value={value} onChange={changeAmount2} />\r\n          <div className=\"switchButton\" >\r\n            <ArrowDownOutlined className=\"switchArrow\" />\r\n          </div>\r\n          <div className=\"assetOne\" >\r\n          \r\n          </div>\r\n          <div className=\"assetTwo\" >\r\n        \r\n          </div>\r\n        </div>\r\n        <div className=\"swapButton\" disabled={!tokenOneAmount && !isConnected} >Transfer</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Swap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}